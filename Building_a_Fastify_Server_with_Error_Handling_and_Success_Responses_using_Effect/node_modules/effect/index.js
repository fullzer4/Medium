"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Scope = exports.Scheduler = exports.ScheduleIntervals = exports.ScheduleInterval = exports.ScheduleDecision = exports.Schedule = exports.STM = exports.Runtime = exports.Resource = exports.RequestResolver = exports.RequestBlock = exports.Request = exports.Reloadable = exports.Ref = exports.RedBlackTree = exports.ReadonlyRecord = exports.ReadonlyArray = exports.Random = exports.Queue = exports.Predicate = exports.Pool = exports.Pipeable = exports.Ordering = exports.Order = exports.Option = exports.Number = exports.MutableRef = exports.MutableQueue = exports.MutableList = exports.MutableHashSet = exports.MutableHashMap = exports.MetricState = exports.MetricRegistry = exports.MetricPolling = exports.MetricPair = exports.MetricLabel = exports.MetricKeyType = exports.MetricKey = exports.MetricHook = exports.MetricBoundaries = exports.Metric = exports.Match = exports.LoggerSpan = exports.LoggerLevel = exports.Logger = exports.List = exports.Layer = exports.KeyedPool = exports.Hub = exports.HashSet = exports.HashMap = exports.Hash = exports.HKT = exports.GroupBy = exports.Function = exports.FiberStatus = exports.FiberRuntimeFlagsPatch = exports.FiberRuntimeFlags = exports.FiberRefs = exports.FiberRef = exports.FiberId = exports.Fiber = exports.Exit = exports.ExecutionStrategy = exports.Equivalence = exports.Equal = exports.Either = exports.Effect = exports.Duration = exports.DifferOrPatch = exports.DifferHashSetPatch = exports.DifferHashMapPatch = exports.DifferContextPatch = exports.DifferChunkPatch = exports.Differ = exports.DeterministicRandom = exports.Deferred = exports.DefaultServices = exports.Data = exports.Context = exports.ConfigSecret = exports.ConfigProvider = exports.ConfigError = exports.Config = exports.Concurrency = exports.Clock = exports.Chunk = exports.ChannelUpstreamPullStrategy = exports.ChannelUpstreamPullRequest = exports.ChannelSingleProducerAsyncInput = exports.ChannelMergeStrategy = exports.ChannelMergeState = exports.ChannelMergeDecision = exports.ChannelChildExecutorDecision = exports.Channel = exports.Cause = exports.Cache = exports.Brand = exports.Boolean = exports.Bigint = void 0;
exports.Tuple = exports.Tracer = exports.Take = exports.TSet = exports.TSemaphore = exports.TRef = exports.TReentrantLock = exports.TRandom = exports.TQueue = exports.TPriorityQueue = exports.TMap = exports.TDeferred = exports.TArray = exports.SynchronizedRef = exports.Symbol = exports.Supervisor = exports.SubscriptionRef = exports.Struct = exports.String = exports.StreamHaltStrategy = exports.StreamEmit = exports.Stream = exports.SortedSet = exports.SortedMap = exports.Sink = exports.ScopedRef = exports.ScopedCache = void 0;
Object.defineProperty(exports, "absurd", {
  enumerable: true,
  get: function () {
    return Function.absurd;
  }
});
Object.defineProperty(exports, "hole", {
  enumerable: true,
  get: function () {
    return Function.hole;
  }
});
Object.defineProperty(exports, "identity", {
  enumerable: true,
  get: function () {
    return Function.identity;
  }
});
Object.defineProperty(exports, "pipe", {
  enumerable: true,
  get: function () {
    return Function.pipe;
  }
});
Object.defineProperty(exports, "unsafeCoerce", {
  enumerable: true,
  get: function () {
    return Function.unsafeCoerce;
  }
});
var Bigint = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Bigint"));
exports.Bigint = Bigint;
var Boolean = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Boolean"));
exports.Boolean = Boolean;
var Brand = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Brand"));
exports.Brand = Brand;
var Cache = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Cache"));
exports.Cache = Cache;
var Cause = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Cause"));
exports.Cause = Cause;
var Channel = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Channel"));
exports.Channel = Channel;
var ChannelChildExecutorDecision = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ChannelChildExecutorDecision"));
exports.ChannelChildExecutorDecision = ChannelChildExecutorDecision;
var ChannelMergeDecision = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ChannelMergeDecision"));
exports.ChannelMergeDecision = ChannelMergeDecision;
var ChannelMergeState = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ChannelMergeState"));
exports.ChannelMergeState = ChannelMergeState;
var ChannelMergeStrategy = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ChannelMergeStrategy"));
exports.ChannelMergeStrategy = ChannelMergeStrategy;
var ChannelSingleProducerAsyncInput = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ChannelSingleProducerAsyncInput"));
exports.ChannelSingleProducerAsyncInput = ChannelSingleProducerAsyncInput;
var ChannelUpstreamPullRequest = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ChannelUpstreamPullRequest"));
exports.ChannelUpstreamPullRequest = ChannelUpstreamPullRequest;
var ChannelUpstreamPullStrategy = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ChannelUpstreamPullStrategy"));
exports.ChannelUpstreamPullStrategy = ChannelUpstreamPullStrategy;
var Chunk = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Chunk"));
exports.Chunk = Chunk;
var Clock = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Clock"));
exports.Clock = Clock;
var Concurrency = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Concurrency"));
exports.Concurrency = Concurrency;
var Config = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Config"));
exports.Config = Config;
var ConfigError = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ConfigError"));
exports.ConfigError = ConfigError;
var ConfigProvider = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ConfigProvider"));
exports.ConfigProvider = ConfigProvider;
var ConfigSecret = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ConfigSecret"));
exports.ConfigSecret = ConfigSecret;
var Context = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Context"));
exports.Context = Context;
var Data = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Data"));
exports.Data = Data;
var DefaultServices = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/DefaultServices"));
exports.DefaultServices = DefaultServices;
var Deferred = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Deferred"));
exports.Deferred = Deferred;
var DeterministicRandom = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/DeterministicRandom"));
exports.DeterministicRandom = DeterministicRandom;
var Differ = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Differ"));
exports.Differ = Differ;
var DifferChunkPatch = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/DifferChunkPatch"));
exports.DifferChunkPatch = DifferChunkPatch;
var DifferContextPatch = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/DifferContextPatch"));
exports.DifferContextPatch = DifferContextPatch;
var DifferHashMapPatch = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/DifferHashMapPatch"));
exports.DifferHashMapPatch = DifferHashMapPatch;
var DifferHashSetPatch = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/DifferHashSetPatch"));
exports.DifferHashSetPatch = DifferHashSetPatch;
var DifferOrPatch = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/DifferOrPatch"));
exports.DifferOrPatch = DifferOrPatch;
var Duration = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Duration"));
exports.Duration = Duration;
var Effect = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Effect"));
exports.Effect = Effect;
var Either = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Either"));
exports.Either = Either;
var Equal = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Equal"));
exports.Equal = Equal;
var Equivalence = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Equivalence"));
exports.Equivalence = Equivalence;
var ExecutionStrategy = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ExecutionStrategy"));
exports.ExecutionStrategy = ExecutionStrategy;
var Exit = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Exit"));
exports.Exit = Exit;
var Fiber = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Fiber"));
exports.Fiber = Fiber;
var FiberId = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/FiberId"));
exports.FiberId = FiberId;
var FiberRef = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/FiberRef"));
exports.FiberRef = FiberRef;
var FiberRefs = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/FiberRefs"));
exports.FiberRefs = FiberRefs;
var FiberRuntimeFlags = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/FiberRuntimeFlags"));
exports.FiberRuntimeFlags = FiberRuntimeFlags;
var FiberRuntimeFlagsPatch = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/FiberRuntimeFlagsPatch"));
exports.FiberRuntimeFlagsPatch = FiberRuntimeFlagsPatch;
var FiberStatus = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/FiberStatus"));
exports.FiberStatus = FiberStatus;
var Function = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Function"));
exports.Function = Function;
var GroupBy = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/GroupBy"));
exports.GroupBy = GroupBy;
var Hash = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Hash"));
exports.Hash = Hash;
var HashMap = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/HashMap"));
exports.HashMap = HashMap;
var HashSet = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/HashSet"));
exports.HashSet = HashSet;
var HKT = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/HKT"));
exports.HKT = HKT;
var Hub = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Hub"));
exports.Hub = Hub;
var KeyedPool = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/KeyedPool"));
exports.KeyedPool = KeyedPool;
var Layer = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Layer"));
exports.Layer = Layer;
var List = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/List"));
exports.List = List;
var Logger = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Logger"));
exports.Logger = Logger;
var LoggerLevel = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/LoggerLevel"));
exports.LoggerLevel = LoggerLevel;
var LoggerSpan = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/LoggerSpan"));
exports.LoggerSpan = LoggerSpan;
var Match = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Match"));
exports.Match = Match;
var Metric = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Metric"));
exports.Metric = Metric;
var MetricBoundaries = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MetricBoundaries"));
exports.MetricBoundaries = MetricBoundaries;
var MetricHook = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MetricHook"));
exports.MetricHook = MetricHook;
var MetricKey = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MetricKey"));
exports.MetricKey = MetricKey;
var MetricKeyType = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MetricKeyType"));
exports.MetricKeyType = MetricKeyType;
var MetricLabel = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MetricLabel"));
exports.MetricLabel = MetricLabel;
var MetricPair = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MetricPair"));
exports.MetricPair = MetricPair;
var MetricPolling = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MetricPolling"));
exports.MetricPolling = MetricPolling;
var MetricRegistry = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MetricRegistry"));
exports.MetricRegistry = MetricRegistry;
var MetricState = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MetricState"));
exports.MetricState = MetricState;
var MutableHashMap = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MutableHashMap"));
exports.MutableHashMap = MutableHashMap;
var MutableHashSet = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MutableHashSet"));
exports.MutableHashSet = MutableHashSet;
var MutableList = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MutableList"));
exports.MutableList = MutableList;
var MutableQueue = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MutableQueue"));
exports.MutableQueue = MutableQueue;
var MutableRef = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/MutableRef"));
exports.MutableRef = MutableRef;
var Number = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Number"));
exports.Number = Number;
var Option = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Option"));
exports.Option = Option;
var Order = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Order"));
exports.Order = Order;
var Ordering = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Ordering"));
exports.Ordering = Ordering;
var Pipeable = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Pipeable"));
exports.Pipeable = Pipeable;
var Pool = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Pool"));
exports.Pool = Pool;
var Predicate = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Predicate"));
exports.Predicate = Predicate;
var Queue = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Queue"));
exports.Queue = Queue;
var Random = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Random"));
exports.Random = Random;
var ReadonlyArray = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyArray"));
exports.ReadonlyArray = ReadonlyArray;
var ReadonlyRecord = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ReadonlyRecord"));
exports.ReadonlyRecord = ReadonlyRecord;
var RedBlackTree = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/RedBlackTree"));
exports.RedBlackTree = RedBlackTree;
var Ref = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Ref"));
exports.Ref = Ref;
var Reloadable = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Reloadable"));
exports.Reloadable = Reloadable;
var Request = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Request"));
exports.Request = Request;
var RequestBlock = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/RequestBlock"));
exports.RequestBlock = RequestBlock;
var RequestResolver = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/RequestResolver"));
exports.RequestResolver = RequestResolver;
var Resource = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Resource"));
exports.Resource = Resource;
var Runtime = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Runtime"));
exports.Runtime = Runtime;
var Schedule = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Schedule"));
exports.Schedule = Schedule;
var ScheduleDecision = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ScheduleDecision"));
exports.ScheduleDecision = ScheduleDecision;
var ScheduleInterval = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ScheduleInterval"));
exports.ScheduleInterval = ScheduleInterval;
var ScheduleIntervals = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ScheduleIntervals"));
exports.ScheduleIntervals = ScheduleIntervals;
var Scheduler = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Scheduler"));
exports.Scheduler = Scheduler;
var Scope = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Scope"));
exports.Scope = Scope;
var ScopedCache = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ScopedCache"));
exports.ScopedCache = ScopedCache;
var ScopedRef = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/ScopedRef"));
exports.ScopedRef = ScopedRef;
var Sink = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Sink"));
exports.Sink = Sink;
var SortedMap = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/SortedMap"));
exports.SortedMap = SortedMap;
var SortedSet = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/SortedSet"));
exports.SortedSet = SortedSet;
var STM = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/STM"));
exports.STM = STM;
var Stream = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Stream"));
exports.Stream = Stream;
var StreamEmit = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/StreamEmit"));
exports.StreamEmit = StreamEmit;
var StreamHaltStrategy = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/StreamHaltStrategy"));
exports.StreamHaltStrategy = StreamHaltStrategy;
var String = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/String"));
exports.String = String;
var Struct = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Struct"));
exports.Struct = Struct;
var SubscriptionRef = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/SubscriptionRef"));
exports.SubscriptionRef = SubscriptionRef;
var Supervisor = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Supervisor"));
exports.Supervisor = Supervisor;
var Symbol = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Symbol"));
exports.Symbol = Symbol;
var SynchronizedRef = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/SynchronizedRef"));
exports.SynchronizedRef = SynchronizedRef;
var Take = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Take"));
exports.Take = Take;
var TArray = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/TArray"));
exports.TArray = TArray;
var TDeferred = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/TDeferred"));
exports.TDeferred = TDeferred;
var TMap = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/TMap"));
exports.TMap = TMap;
var TPriorityQueue = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/TPriorityQueue"));
exports.TPriorityQueue = TPriorityQueue;
var TQueue = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/TQueue"));
exports.TQueue = TQueue;
var Tracer = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Tracer"));
exports.Tracer = Tracer;
var TRandom = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/TRandom"));
exports.TRandom = TRandom;
var TReentrantLock = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/TReentrantLock"));
exports.TReentrantLock = TReentrantLock;
var TRef = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/TRef"));
exports.TRef = TRef;
var TSemaphore = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/TSemaphore"));
exports.TSemaphore = TSemaphore;
var TSet = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/TSet"));
exports.TSet = TSet;
var Tuple = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("effect/Tuple"));
exports.Tuple = Tuple;
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
//# sourceMappingURL=index.js.map